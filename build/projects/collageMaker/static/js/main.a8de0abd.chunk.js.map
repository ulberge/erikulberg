{"version":3,"sources":["LoadFile.js","selection/SelectionOverlay.js","selection/Selection.js","palette/PaletteItem.js","palette/Palette.js","collage/CollageOverlay.js","collage/Collage.js","App.js","serviceWorker.js","index.js"],"names":["LoadFile","onLoad","src","_this","props","imgEl","p","createImg","hide","img","createGraphics","elt","naturalWidth","naturalHeight","image","loadPixels","_this2","this","node","ReactDOM","findDOMNode","p5","_this3","defaultImage","react_default","a","createElement","className","style","width","opacity","display","alt","event","target","React","PureComponent","SelectionOverlay","queueUpdate","options","updateDelayed","updatePieces","onMouseDown","addTriangleAt","pointer","doQueue","cancelUpdate","onUpdatePieces","pieces","triangles","map","triangle","_collage_id","left","top","angle","oCoords","_dirty","_selected","mt","bl","br","nCoords","x","scale","y","bounds","getBoundingRect","nBounds","height","selected","dirty","id","r","coords","renderPieces","piece","createTriangle","forEach","t","canvas","add","i","length","setActiveObject","renderOverlaps","_this$props","placedPiecesData","overlaps","Object","keys","overlapKey","overlapShape","topTip","ptsAbsolute","vPolar","dist","angleAdj","Math","PI","cos","sin","push","minX","Infinity","minY","pt","polygon","fabric","Polygon","stroke","strokeWidth","fill","selectable","objectCaching","sendToBack","click","nextID","newTriangle","addTriangle","Triangle","sqrt","originY","originX","transparentCorners","padding","cornerSize","cornerColor","borderColor","setControlVisible","rotate","addPiece","parseInt","localStorage","getItem","setItem","onWindowResize","container","assertThisInitialized","parentNode","parentElement","w","clientWidth","clear","setWidth","setHeight","ratio","h","clientHeight","Canvas","on","object:moving","object:rotating","object:moved","object:rotated","selection:created","selection:updated","mouse:up","mouse:down","selection","window","addEventListener","Selection","onUpdateSrc","onUpdateSelected","selectionScale","onScaleChange","Grid_default","spacing","item","xs","position","LoadFile_LoadFile","SelectionOverlay_SelectionOverlay","marginTop","Slider_default","value","aria-labelledby","min","max","onChange","PaletteItem","setup","createCanvas","noLoop","draw","onPieceReady","mask","background","noStroke","beginShape","v","vertex","endShape","CLOSE","toFilterG","toFilter","get","remove","b","resizeCanvas","xTot","yTot","translate","pop","toDataURL","sketch","Palette","getDisplayEls","processedPieces","placedPieces","togglePiece","reverse","slice","dataURL","isAdded","includes","boxShadow","border","key","onClick","getProcessEls","_this$props2","PaletteItem_PaletteItem","CollageOverlay","checkOverlap","setCoords","targetCoords","getCoords","forEachObject","obj","otherCoords","overlap","triangle2triangleIntersection","console","log","undefined","_triangle$oCoords","renderIndex","newPieceCount","data","_data","currentRenderIndex","onPiecePlacedUpdate","onSelectPiece","callback","Image","fromURL","set","bottom","bottomAngle","intersections","p0","p1","j","p2","p3","lineIntersection","line2lineIntersection","newShape","pointsInside","pointInTriangle","concat","distBetweenPoints","newShapePolar","getPolar","sort","v0","v1","round","origin","originAngle","angleBetweenPoints","decimals","Number","unknownA","unknownB","denominator","point","cx","cy","t0","t1","t2","v0x","v0y","v1x","v1y","v2x","v2y","dot00","dot01","dot02","dot11","dot12","inv","u","pow","atan2","savedPiecesData","order","nextProps","nextState","_this$props3","filter","isRender","Component","Collage","state","_this$state","updatePieceScale","visibility","setState","CollageOverlay_CollageOverlay","Switch_default","checked","color","PIECE_ID","App","pieceScale","removeCurrentPiece","updated","pre","update","indexOf","splice","selectPiece","assign","save","_this$state2","toSave","JSON","stringify","load","toLoad","_JSON$parse","parse","document","body","e","querySelector","replace","location","href","setTimeout","render","prompt","_this$state3","minHeight","AppBar_default","Toolbar_default","variant","Typography_default","Card_default","CardContent_default","Selection_Selection","Palette_Palette","margin","Button_default","Collage_Collage","Boolean","hostname","match","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a8de0abd.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport p5 from 'p5';\nimport 'p5/lib/addons/p5.dom';\n\nexport default class LoadFile extends React.PureComponent {\n\n  componentDidMount() {\n    const node = ReactDOM.findDOMNode(this);\n\n    let sketch = p => {\n      this.p = p;\n    };\n\n    new p5(sketch, node);\n  }\n\n  onLoad = (src) => {\n    const { onLoad } = this.props;\n    const imgEl = this.p.createImg(src).hide();\n    const img = this.p.createGraphics(imgEl.elt.naturalWidth, imgEl.elt.naturalHeight);\n    img.image(imgEl, 0, 0, imgEl.elt.naturalWidth, imgEl.elt.naturalHeight);\n    img.loadPixels();\n    onLoad(img);\n  }\n\n  render() {\n    const { defaultImage } = this.props;\n    return (\n      <div className=\"upload\" style={{ width: '100%', opacity: 1 }}>\n        <img className=\"loadedImage\" style={{ display: 'block' }} src={ defaultImage } alt=\"Load an image\" onLoad={event => this.onLoad(event.target.src)} />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from \"react-dom\";\n\nimport { fabric } from 'fabric';\n\nexport default class SelectionOverlay extends React.PureComponent {\n\n  componentDidMount() {\n    const node = ReactDOM.findDOMNode(this);\n\n    // Make canvas width and height of parent\n    const container = node.parentNode.parentElement;\n    this.w = container.clientWidth;\n    this.h = container.clientHeight;\n    this.ratio = this.h / this.w;\n    this.scale = this.w;\n    node.width = this.w;\n    node.height = this.h;\n\n    this.canvas = new fabric.Canvas(node);\n    this.canvas.on({\n      'object:moving': this.cancelUpdate,\n      'object:rotating': this.cancelUpdate,\n      'object:moved': this.updatePieces,\n      'object:rotated': this.updatePieces,\n      'selection:created': this.queueUpdate,\n      'selection:updated': this.queueUpdate,\n      'mouse:up': this.doQueue,\n      'mouse:down': this.onMouseDown\n    });\n    this.canvas.selection = false;\n\n    window.addEventListener('resize', this.onWindowResize, false);\n\n    this.renderPieces();\n  }\n\n  componentDidUpdate() {\n    this.canvas.clear();\n    this.renderPieces();\n  }\n\n  queueUpdate = options => {\n    this.updateDelayed = () => this.updatePieces(options);\n  }\n\n  onMouseDown = options => {\n    if (options.target === null) {\n      this.addTriangleAt(options.pointer);\n    }\n  }\n\n  doQueue = () => {\n    if (this.updateDelayed) {\n      this.updateDelayed();\n    }\n  }\n\n  cancelUpdate = () => {\n    this.updateDelayed = false;\n  }\n\n  updatePieces = options => {\n    this.cancelUpdate();\n    const { onUpdatePieces } = this.props;\n\n    // create pieces from triangles\n    let pieces = [];\n    if (this.triangles) {\n      pieces = this.triangles.map(triangle => {\n        const { _collage_id, left, top, angle, oCoords, _dirty, _selected } = triangle;\n\n        // Normalize\n        const { mt, bl, br } = oCoords;\n        const nCoords = [\n          { x: mt.x / this.scale, y: mt.y / this.scale },\n          { x: bl.x / this.scale, y: bl.y / this.scale },\n          { x: br.x / this.scale, y: br.y / this.scale },\n        ];\n\n        const bounds = triangle.getBoundingRect();\n        const nBounds = {\n          left: bounds.left / this.scale,\n          top: bounds.top / this.scale,\n          width: bounds.width / this.scale,\n          height: bounds.height / this.scale\n        };\n\n        let selected = false;\n        let dirty = _dirty;\n        if (options && options.target === triangle) {\n          selected = true;\n          dirty = true;\n        } else {\n          selected = _selected;\n        }\n\n        return {\n          selected: selected,\n          id: _collage_id,\n          x: left / this.scale,\n          y: top / this.scale,\n          r: angle,\n          coords: nCoords,\n          bounds: nBounds,\n          dirty\n        };\n      });\n    }\n    onUpdatePieces(pieces);\n  }\n\n  renderPieces = () => {\n    const { pieces } = this.props;\n\n    this.triangles = pieces.map(piece => this.createTriangle(piece));\n    this.triangles.forEach(t => this.canvas.add(t));\n\n    // Set selected\n    for (let i = 0; i < pieces.length; i += 1) {\n      if (pieces[i].selected) {\n        this.canvas.setActiveObject(this.triangles[i]);\n      }\n    }\n\n    this.renderOverlaps();\n  }\n\n  renderOverlaps = () => {\n    const { pieces, placedPiecesData, scale } = this.props;\n\n    pieces.forEach(piece => {\n      const { id, r, coords } = piece;\n\n      // If not placed, it cant have overlaps\n      if (!placedPiecesData[id]) {\n        return;\n      }\n\n      const placedPiece = placedPiecesData[id];\n      const { overlaps } = placedPiece;\n      if (!overlaps) {\n        return;\n      }\n\n      // For each overlap, draw the section on this triangle\n      Object.keys(overlaps).forEach(overlapKey => {\n        const overlapShape = overlaps[overlapKey];\n        // Polar coordinates of overlay are relative to top tip of triangle\n        const topTip = coords[0];\n\n        // Get the polar coordinates as points relative to the size of this overlay at the rotation of the parent piece\n        const ptsAbsolute = [];\n        overlapShape.forEach(vPolar => {\n          const { dist, angle } = vPolar;\n          const angleAdj = ((r / 180) * Math.PI) + angle;\n          const x = (Math.cos(angleAdj) * dist) * scale * this.scale;\n          const y = (Math.sin(angleAdj) * dist) * scale * this.scale;\n          ptsAbsolute.push({ x: x + (topTip.x * this.scale), y: y + (topTip.y * this.scale) });\n        });\n\n        // Get the min and max of the points for translation since fabricjs translates to origin\n        let minX = Infinity;\n        let minY = Infinity;\n        ptsAbsolute.forEach(pt => {\n          if (pt.x < minX) {\n            minX = pt.x;\n          }\n          if (pt.y < minY) {\n            minY = pt.y;\n          }\n        });\n\n        // Move back to correct position\n        const polygon = new fabric.Polygon(ptsAbsolute, {\n          left: minX,\n          top: minY,\n          stroke: 'rgba(0,0,0,0.9)',\n          strokeWidth: 0,\n          fill: 'rgba(255,0,0,0.2)',\n          selectable: false,\n          objectCaching: false,\n        });\n        this.canvas.add(polygon);\n        this.canvas.sendToBack(polygon);\n      });\n    });\n  }\n\n  addTriangleAt = click => {\n    const id = this.nextID();\n    const r = 0;\n    const x = click.x / this.scale;\n    const y = click.y / this.scale;\n    const piece = { id, x, y, r };\n    const newTriangle = this.createTriangle(piece);\n    this.addTriangle(newTriangle);\n  }\n\n  createTriangle = piece => {\n    const { scale } = this.props;\n    const { x, y, r } = piece;\n\n    const triangle = new fabric.Triangle({\n      width: scale * this.scale,\n      height: scale * ((Math.sqrt(3)/6) + (Math.sqrt(3)/3)) * this.scale,\n      left: x * this.scale,\n      top: y * this.scale,\n      originY: 'center',\n      originX: 'center',\n      stroke: 'rgba(0,0,0,0.9)',\n      strokeWidth: 0.5,\n      fill: 'rgba(255,255,255,0.2)',\n      transparentCorners: false,\n      padding: 0,\n      cornerSize: 15,\n      cornerColor: 'rgba(255,0,200,0.7)',\n      borderColor: 'rgba(255,0,200,0.5)',\n    });\n    triangle.setControlVisible('bl', false);\n    triangle.setControlVisible('br', false);\n    triangle.setControlVisible('mb', false);\n    triangle.setControlVisible('ml', false);\n    triangle.setControlVisible('mr', false);\n    triangle.setControlVisible('mt', false);\n    triangle.setControlVisible('tl', false);\n    triangle.setControlVisible('tr', false);\n    triangle._collage_id = piece.id;\n    triangle.rotate(r);\n\n    return triangle;\n  }\n\n  addTriangle = triangle => {\n    const { addPiece } = this.props;\n    if (triangle) {\n      triangle._dirty = true;\n      triangle._selected = true;\n      this.triangles.push(triangle);\n      this.canvas.add(triangle);\n      this.updatePieces();\n      addPiece(triangle._collage_id);\n    }\n  }\n\n  // Get unique IDs for each piece\n  nextID = () => {\n    let id = parseInt(localStorage.getItem('pieceID'));\n    if (!id) {\n      id = 0;\n    }\n    localStorage.setItem('pieceID', id + 1);\n    return id;\n  }\n\n  onWindowResize = () => {\n    const node = ReactDOM.findDOMNode(this);\n    const container = node.parentNode.parentElement;\n    this.w = container.clientWidth;\n    this.scale = this.w;\n    this.canvas.clear();\n    this.canvas.setWidth(this.w);\n    this.canvas.setHeight(this.w * this.ratio);\n    this.renderPieces();\n  }\n\n  render() {\n    return (\n      <canvas width=\"300\" height=\"300\"></canvas>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Grid from '@material-ui/core/Grid';\nimport Slider from '@material-ui/lab/Slider';\n\nimport LoadFile from '../LoadFile';\nimport SelectionOverlay from './SelectionOverlay';\n\n// Load an image\n// Adjust piece scale (resets collage)\n// Add and remove pieces\n// Rotate and position pieces\n// calls update function when pieces update\nexport default class Selection extends React.PureComponent {\n  static propTypes = {\n    onUpdatePieces: PropTypes.func.isRequired, // eslint-disable-line react/forbid-prop-types\n    onUpdateSrc: PropTypes.func.isRequired, // eslint-disable-line react/forbid-prop-types\n  }\n\n  render() {\n    const { src, pieces, onUpdatePieces, onUpdateSrc, onUpdateSelected, selectionScale, onScaleChange, addPiece, placedPiecesData } = this.props;\n\n    return (\n      <Grid container spacing={24}>\n        <Grid item xs={12}>\n          <div style={{ position: 'relative' }}>\n            <LoadFile onLoad={onUpdateSrc} defaultImage=\"imgs/wood2_s.png\" />\n            { !!src &&\n              (<div style={{ position: 'absolute', top: 0, width: '100%' }} id=\"selection\" >\n                <SelectionOverlay scale={selectionScale} pieces={pieces} onUpdatePieces={onUpdatePieces} onUpdateSelected={onUpdateSelected} addPiece={addPiece} placedPiecesData={placedPiecesData} />\n              </div>)\n            }\n            <div style={{ marginTop: '22px' }}>\n                <Slider\n                  value={selectionScale}\n                  aria-labelledby=\"selectionScale\"\n                  min={0.1}\n                  max={1}\n                  onChange={(event, value) => onScaleChange(value)}\n                />\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from \"react-dom\";\n\nimport p5 from 'p5';\nimport 'p5/lib/addons/p5.dom';\n\nexport default class PaletteItem extends React.PureComponent {\n\n  componentDidMount() {\n    const { src } = this.props;\n\n    if (!src) {\n      return;\n    }\n\n    const node = ReactDOM.findDOMNode(this);\n    let sketch = p => {\n      this.p = p;\n      p.setup = () => this.setup(p);\n      p.draw = () => this.draw(p);\n    };\n    this.sketch = new p5(sketch, node);\n  }\n\n  componentDidUpdate() {\n    const { piece } = this.props;\n    if (this.p && piece.dirty) {\n      // Update palette Item\n      this.draw(this.p);\n    }\n  }\n\n  setup = p => {\n    p.createCanvas(100, 100);\n    p.noLoop();\n  }\n\n  draw = p => {\n    const { piece, src, onPieceReady } = this.props;\n\n    // Draw mask to graphics\n    const mask = p.createGraphics(src.width, src.height);\n    mask.background(255, 255, 255, 0);\n    mask.fill(255, 255, 255, 255);\n    mask.noStroke();\n    mask.beginShape();\n    piece.coords.forEach(v => {\n      mask.vertex(v.x * src.width, v.y * src.width);\n    });\n    mask.endShape(mask.CLOSE);\n\n    // Filter image\n    const toFilterG = p.createGraphics(src.width, src.height);\n    toFilterG.image(src, 0, 0);\n    const toFilter = toFilterG.get();\n    toFilter.mask(mask);\n    mask.remove();\n\n    // Draw just the cutout\n    const a = piece.coords[0].x-piece.coords[1].x;\n    const b = piece.coords[0].y-piece.coords[1].y;\n    const scale = Math.sqrt((a*a*src.width*src.width) + (b*b*src.width*src.width));\n    if (p.width !== scale) {\n      p.resizeCanvas(scale, scale * ((Math.sqrt(3)/6) + (Math.sqrt(3)/3)));\n    }\n    p.push();\n\n    // Get center point\n    let xTot = 0;\n    let yTot = 0;\n    piece.coords.forEach(v => {\n      xTot += v.x * src.width;\n      yTot += v.y * src.width;\n    });\n    xTot = xTot / 3;\n    yTot = yTot / 3;\n\n    // Rotate to face up around center point\n    p.translate(scale/2, scale * ((Math.sqrt(3)/3)));\n    p.rotate(-(piece.r / 180) * Math.PI);\n    p.image(toFilter, -xTot, -yTot);\n    p.pop();\n\n    onPieceReady(piece.id, p.canvas.toDataURL());\n  }\n\n  render() {\n    return (\n      <div className=\"palette-item\"></div>\n    );\n  }\n}\n","import React from 'react';\n\nimport Grid from '@material-ui/core/Grid';\n\nimport PaletteItem from './PaletteItem';\n\nexport default class Palette extends React.PureComponent {\n\n  getDisplayEls = () => {\n    const { pieces, processedPieces, placedPieces, togglePiece } = this.props;\n    const reverse = pieces.slice();\n    reverse.reverse();\n    const displayEls = reverse.map(piece => {\n      if (!processedPieces || !processedPieces[piece.id] || ! processedPieces[piece.id].dataURL) {\n        return null;\n      }\n      const isAdded = placedPieces.includes(piece.id);\n      const style = {\n        width: '100%',\n        boxShadow: 'none',\n        padding: '2px'\n      };\n      if (piece.selected) {\n        style.border = '1px solid rgba(0,0,0,0.75)';\n      }\n      if (isAdded) {\n        style.boxShadow = '1px 1px 11px -4px rgba(0,0,0,0.75)';\n      }\n      return (<Grid key={'display' + piece.id} item xs={4}><img onClick={() => togglePiece(piece.id)} style={style} src={processedPieces[piece.id].dataURL} alt=\"piece\"/></Grid>)\n    });\n    return displayEls;\n  }\n\n  getProcessEls = () => {\n    const { pieces, src, onPieceReady, selectionScale } = this.props;\n    const processEls = pieces.map(piece => (\n      <Grid key={'process' + piece.id} item xs={4}>\n        <PaletteItem piece={piece} src={src} onPieceReady={onPieceReady} selectionScale={selectionScale} />\n      </Grid>\n    ));\n    return processEls;\n  }\n\n  render() {\n    return (\n      <Grid container spacing={16}>\n        {this.getDisplayEls()}\n        <div style={{ position: 'absolute', left: '-10000px'}} >\n          {this.getProcessEls()}\n        </div>\n      </Grid>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { fabric } from 'fabric';\n\nexport default class CollageOverlay extends React.Component {\n\n  componentDidMount() {\n    const node = ReactDOM.findDOMNode(this);\n\n    const { savedPiecesData } = this.props;\n\n    this.placedPiecesData = {};\n    if (savedPiecesData) {\n      this.placedPiecesData = savedPiecesData;\n    }\n    this.order = [];\n\n    // Make canvas width and height of parent\n    const container = node.parentNode.parentElement;\n    this.w = container.clientWidth;\n    this.h = container.clientHeight;\n    this.ratio = this.h / this.w;\n    this.scale = this.w;\n    node.width = this.w;\n    node.height = this.h;\n\n    this.canvas = new fabric.Canvas(node);\n    this.canvas.on({\n      'object:moving': this.cancelUpdate,\n      'object:rotating': this.cancelUpdate,\n      'object:moved': this.updatePieces,\n      'object:rotated': this.updatePieces,\n      'selection:updated': this.queueUpdate,\n      'selection:created': this.queueUpdate,\n      'mouse:up': this.doQueue\n    });\n    this.canvas.selection = false;\n\n    window.addEventListener('resize', this.onWindowResize, false);\n\n    this.renderPieces();\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const { pieces, placedPieces, processedPieces, scale } = this.props;\n\n    if (!nextProps || !nextState) {\n      return true;\n    }\n\n    // if the placedPieces are not the same\n    if (placedPieces.length !== nextProps.placedPieces.length) {\n      return true;\n    }\n\n    pieces.forEach((piece, i) => {\n      const { id, selected } = piece;\n\n      const { dataURL } = processedPieces[id];\n      // if the dataURLS are not the same\n      if (dataURL !== nextProps.processedPieces[id].dataURL) {\n        return true;\n      }\n\n      // if selection is not not the same\n      if (selected !== nextProps.pieces[i].selected) {\n        return true;\n      }\n    });\n\n    // if the scale is not the same\n    if (scale !== nextProps.scale) {\n      return true;\n    }\n\n    return true;\n  }\n\n\n  componentDidUpdate() {\n    this.canvas.clear();\n    // Keep track of renders to prevent old async renders from still happening (image load is async)\n    if (this.currentRenderIndex === undefined) {\n      this.currentRenderIndex = -1;\n    }\n    this.currentRenderIndex += 1;\n    this.renderPieces(this.currentRenderIndex);\n  }\n\n  checkOverlap = options => {\n    options.target.setCoords();\n\n    // Remove all the overlaps on this piece, because it is now brought to the front\n    options.target.overlaps = {};\n\n    // Find all the overlaps between the object last moved and any other triangle\n    // The last moved piece is brought to the front, so add overlaps to those underneath\n    const targetCoords = this.getCoords(options.target);\n    this.canvas.forEachObject((obj) => {\n      if (obj === options.target) return; // Do not check overlaps with itself\n\n      const otherCoords = this.getCoords(obj);\n      const overlap = this.triangle2triangleIntersection(targetCoords, otherCoords, obj.angle);\n      console.log(overlap);\n      if (overlap) {\n        obj.overlaps[options.target._collage_id] = overlap; // Add an overlap between these pieces to bottom\n      } else if (obj.overlaps[options.target._collage_id] !== undefined) {\n        delete obj.overlaps[options.target._collage_id]; // If no overlap, remove any that is recorded\n      }\n    });\n  }\n\n  // Get the coords of the triangle from the bounding coords\n  getCoords = triangle => {\n    const { mt, bl, br } = triangle.oCoords;\n    const nCoords = [\n      { x: mt.x, y: mt.y },\n      { x: bl.x, y: bl.y },\n      { x: br.x, y: br.y },\n    ];\n    return nCoords;\n  }\n\n  renderPieces = renderIndex => {\n    const { pieces, processedPieces, placedPieces, scale } = this.props;\n\n    this.triangles = [];\n    let newPieceCount = 0;\n    pieces.forEach((piece, i) => {\n      const { id } = piece;\n      // Not processed or placed\n      if (!processedPieces[id] || !placedPieces.includes(id)) {\n        return\n      }\n\n      const { dataURL } = processedPieces[id];\n      // Set to defaults unless we have created data for it\n      let data;\n      if (this.placedPiecesData[id]) {\n        data = this.placedPiecesData[id]\n      } else {\n        // new piece\n        data = { x: 5 * scale + (0.01 * newPieceCount), y: 4 * scale + (0.002 * newPieceCount), r: 0, overlaps: {} };\n        newPieceCount++;\n      }\n\n      const { x, y, r, overlaps } = data;\n      this.createTriangle(id, x, y, r, overlaps, dataURL, triangle => {\n        if (this.currentRenderIndex !== renderIndex) {\n          // stale async call, dont do\n          return;\n        }\n        this.canvas.add(triangle);\n        this.triangles.push(triangle);\n\n        // Set selected piece\n        if (piece.selected) {\n          this.canvas.setActiveObject(triangle);\n        }\n      });\n    });\n  }\n\n  queueUpdate = options => {\n    this.updateDelayed = () => this.updatePieces(options);\n  }\n\n  doQueue = () => {\n    if (this.updateDelayed) {\n      this.updateDelayed();\n    }\n  }\n\n  cancelUpdate = () => {\n    this.updateDelayed = false;\n  }\n\n  // On update, record data, send to parent\n  updatePieces = options => {\n    this.cancelUpdate();\n    this.checkOverlap(options);\n    const { onPiecePlacedUpdate, onSelectPiece } = this.props;\n\n    let placedPiecesData = {};\n    if (this.triangles) {\n      this.triangles.forEach(triangle => {\n        const { _collage_id, left, top, angle, overlaps } = triangle;\n\n        placedPiecesData[_collage_id] = {\n          x: left / this.scale,\n          y: top / this.scale,\n          r: angle,\n          overlaps\n        };\n\n        if (options && options.target === triangle) {\n          onSelectPiece(_collage_id);\n        }\n      });\n    }\n    this.placedPiecesData = placedPiecesData;\n    onPiecePlacedUpdate(placedPiecesData);\n  }\n\n  createTriangle = (id, x, y, r, overlaps, dataURL, callback) => {\n    const { scale } = this.props;\n\n    fabric.Image.fromURL(dataURL, triangle => {\n      triangle.scale(this.scale * scale / 20).set({\n        left: x * this.scale,\n        top: y * this.scale,\n        originY: 'center',\n        originX: 'center',\n        transparentCorners: false,\n        padding: 0,\n        cornerSize: 15,\n        cornerColor: 'rgba(0,0,0,0.7)',\n        borderColor: 'rgba(0,0,0,0.5)',\n      });\n\n      // var filter = new fabric.Image.filters.Grayscale();\n      // triangle.filters.push(filter);\n      // triangle.applyFilters();\n\n      triangle.setControlVisible('bl', false);\n      triangle.setControlVisible('br', false);\n      triangle.setControlVisible('mb', false);\n      triangle.setControlVisible('ml', false);\n      triangle.setControlVisible('mr', false);\n      triangle.setControlVisible('mt', false);\n      triangle.setControlVisible('tl', false);\n      triangle.setControlVisible('tr', false);\n      triangle._collage_id = id;\n      triangle.overlaps = overlaps;\n      triangle.rotate(r);\n\n      callback(triangle);\n    });\n  }\n\n  // get intersection coordinates relative to top point in bottom triangle and angle\n  triangle2triangleIntersection = (top, bottom, bottomAngle) => {\n    // for each line, check the lines in the other triangle\n    const intersections = [];\n    // For each line in the top\n    for (let i = 0; i < 3; i += 1) {\n      const p0 = top[i];\n      const p1 = top[(i + 1) % 3];\n\n      // For each line in the bottom\n      for (let j = 0; j < 3; j += 1) {\n        const p2 = bottom[j];\n        const p3 = bottom[(j + 1) % 3];\n        const lineIntersection = this.line2lineIntersection(p0, p1, p2, p3);\n        if (lineIntersection) {\n          intersections.push(lineIntersection);\n        }\n      }\n    }\n\n    const pointsInside = [];\n\n    // There should be 0, 2, 4, or 6 intersections\n    if (intersections.length === 0) {\n      return false;\n    }\n\n    // figure out shapes of intersection\n    let newShape;\n    if (intersections.length === 6) {\n      newShape = [intersections[0], intersections[1], intersections[2], intersections[3], intersections[4], intersections[5]];\n    } else if (intersections.length === 4) {\n      newShape = [intersections[0], intersections[1], intersections[2], intersections[3]];\n    } else if (intersections.length === 2) {\n      // There should be 2 intersections\n      // Find the 1 or 2 points inside\n      top.forEach(v => {\n        // is it inside bottom?\n        if (this.pointInTriangle(v, bottom)) {\n          pointsInside.push(v);\n        }\n      });\n      bottom.forEach(v => {\n        // is it inside bottom?\n        if (this.pointInTriangle(v, top)) {\n          pointsInside.push(v);\n        }\n      });\n\n      if (pointsInside.length === 1) {\n        newShape = intersections.concat(pointsInside);\n      } else if (pointsInside.length === 2) {\n        newShape = [intersections[0], pointsInside[0], intersections[1], pointsInside[1]];\n      }\n    }\n\n    // translate shapes points into polar coordinates relative to bottom triangle\n    const topTip = bottom[0];\n    const scale = this.distBetweenPoints(bottom[0], bottom[1])\n    const newShapePolar = [];\n    newShape.forEach(v => {\n      newShapePolar.push(this.getPolar(v, topTip, bottomAngle, scale));\n    });\n\n    // Order by angle, break ties by distance to have a convex polygon\n    console.log('newShapePolar', newShapePolar);\n    newShapePolar.sort((v0, v1) => {\n      // We have to round or else the angles are slightly off\n      const a0 = this.round(v0.angle, 9);\n      const a1 = this.round(v1.angle, 9);\n\n      if (a0 === a1) { // if they are the same-ish, they are aligned\n        if (this.round(v0.angle, 0) === 1) { // if on right side of triangle, moving away\n          return v0.dist - v1.dist;\n        } else { // if on left side of triangle, moving towards\n          return v1.dist - v0.dist;\n        }\n      }\n      return v0.angle - v1.angle;\n    });\n    console.log('newShapePolar', newShapePolar);\n\n    return newShapePolar;\n  }\n\n  getPolar = (v, origin, originAngle, scale) => {\n    const dist = this.distBetweenPoints(v, origin) / scale;\n    const angle = -(Math.PI * (originAngle / 180)) + this.angleBetweenPoints(v, origin);\n    const polar = { dist, angle };\n    return polar;\n  }\n\n  // http://www.jacklmoore.com/notes/rounding-in-javascript/\n  round = (value, decimals) => {\n    return Number(Math.round(value+'e'+decimals)+'e-'+decimals);\n  }\n\n  // Get interseting point of 2 line segments (if any)\n  // Attribution: http://paulbourke.net/geometry/pointlineplane/\n  line2lineIntersection = (p0,p1,p2,p3) => {\n    var unknownA = (p3.x-p2.x) * (p0.y-p2.y) - (p3.y-p2.y) * (p0.x-p2.x);\n    var unknownB = (p1.x-p0.x) * (p0.y-p2.y) - (p1.y-p0.y) * (p0.x-p2.x);\n    var denominator  = (p3.y-p2.y) * (p1.x-p0.x) - (p3.x-p2.x) * (p1.y-p0.y);\n\n    // Test if Coincident\n    // If the denominator and numerator for the ua and ub are 0\n    //    then the two lines are coincident.\n    if(unknownA === 0 && unknownB === 0 && denominator === 0){return(null);}\n\n    // Test if Parallel\n    // If the denominator for the equations for ua and ub is 0\n    //     then the two lines are parallel.\n    if (denominator === 0) return null;\n\n    // If the intersection of line segments is required\n    // then it is only necessary to test if ua and ub lie between 0 and 1.\n    // Whichever one lies within that range then the corresponding\n    // line segment contains the intersection point.\n    // If both lie within the range of 0 to 1 then\n    // the intersection point is within both line segments.\n    unknownA /= denominator;\n    unknownB /= denominator;\n\n    var isIntersecting=(unknownA>=0 && unknownA<=1 && unknownB>=0 && unknownB<=1)\n\n    if(!isIntersecting){return(null);}\n\n    return({\n        x: p0.x + unknownA * (p1.x-p0.x),\n        y: p0.y + unknownA * (p1.y-p0.y)\n    });\n  }\n\n  // https://github.com/mattdesl/point-in-triangle\n  pointInTriangle = (point, triangle) => {\n    //compute vectors & dot products\n    var cx = point.x, cy = point.y,\n        t0 = triangle[0], t1 = triangle[1], t2 = triangle[2],\n        v0x = t2.x-t0.x, v0y = t2.y-t0.y,\n        v1x = t1.x-t0.x, v1y = t1.y-t0.y,\n        v2x = cx-t0.x, v2y = cy-t0.y,\n        dot00 = v0x*v0x + v0y*v0y,\n        dot01 = v0x*v1x + v0y*v1y,\n        dot02 = v0x*v2x + v0y*v2y,\n        dot11 = v1x*v1x + v1y*v1y,\n        dot12 = v1x*v2x + v1y*v2y\n\n    // Compute barycentric coordinates\n    var b = (dot00 * dot11 - dot01 * dot01),\n        inv = b === 0 ? 0 : (1 / b),\n        u = (dot11*dot02 - dot01*dot12) * inv,\n        v = (dot00*dot12 - dot01*dot02) * inv\n    return u>=0 && v>=0 && (u+v < 1)\n  }\n\n  distBetweenPoints = (p0, p1) => {\n    return Math.sqrt(((p0.x-p1.x)**2) + ((p0.y-p1.y)**2));\n  }\n\n  angleBetweenPoints = (p0, p1) => {\n    return Math.atan2(p0.y-p1.y, p0.x-p1.x);\n  }\n\n  onWindowResize = () => {\n    const node = ReactDOM.findDOMNode(this);\n    const container = node.parentNode.parentElement;\n    this.w = container.clientWidth;\n    this.scale = this.w;\n    this.canvas.clear();\n    this.canvas.setWidth(this.w);\n    this.canvas.setHeight(this.w * this.ratio);\n\n    // Keep track of renders to prevent old async renders from still happening (image load is async)\n    if (this.currentRenderIndex === undefined) {\n      this.currentRenderIndex = -1;\n    }\n    this.currentRenderIndex += 1;\n    this.renderPieces(this.currentRenderIndex);\n  }\n\n  render() {\n    const { isRender } = this.props;\n    let filter = 'grayscale(100%) brightness(1.05) contrast(125%)';\n    if (isRender) {\n      filter = 'none';\n    }\n    return (\n      <canvas width=\"300\" height=\"300\" style={{ filter: filter }}></canvas>\n    );\n  }\n}\n","import React from 'react';\n\nimport Grid from '@material-ui/core/Grid';\nimport Slider from '@material-ui/lab/Slider';\nimport Switch from '@material-ui/core/Switch';\n\nimport LoadFile from '../LoadFile';\nimport CollageOverlay from './CollageOverlay';\n\nexport default class Collage extends React.PureComponent {\n  state = {\n    target: null,\n    isRender: false\n  };\n\n  render() {\n    const { target, isRender } = this.state;\n    const { pieces, processedPieces, placedPieces, onPiecePlacedUpdate, onSelectPiece, scale, updatePieceScale, savedPiecesData } = this.props;\n\n    let style = {};\n    if (isRender) {\n      style = { visibility: 'hidden' };\n    }\n\n    return (\n      <Grid container spacing={24}>\n        <Grid item xs={12}>\n          <div style={{ position: 'relative' }}>\n            <div style={style}>\n              <LoadFile onLoad={target => this.setState({ target })} defaultImage=\"imgs/sketch1.png\" />\n            </div>\n            { !!target &&\n              (<div id=\"render\" style={{ position: 'absolute', top: 0, width: '100%' }}>\n                <CollageOverlay\n                  pieces={pieces}\n                  processedPieces={processedPieces}\n                  placedPieces={placedPieces}\n                  onPiecePlacedUpdate={onPiecePlacedUpdate}\n                  onSelectPiece={onSelectPiece}\n                  savedPiecesData={savedPiecesData}\n                  scale={scale}\n                  isRender={isRender}\n                />\n              </div>)\n            }\n          </div>\n          <div style={{ padding: '22px' }}>\n            <Grid container spacing={8}>\n              <Grid item xs={2}>\n                <Switch\n                  checked={isRender}\n                  onChange={() => this.setState({ isRender: !isRender })}\n                  value=\"isRender\"\n                  color=\"primary\"\n                />\n              </Grid>\n              <Grid item xs={10}>\n                <div style={{ marginTop: '22px', width: '100%' }}>\n                  <Slider\n                      value={scale}\n                      aria-labelledby=\"scale\"\n                      min={0.003}\n                      max={0.05}\n                      onChange={(event, value) => updatePieceScale(value)}\n                    />\n                </div>\n              </Grid>\n            </Grid>\n          </div>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport './App.css';\n\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\n\nimport Selection from './selection/Selection';\nimport Palette from './palette/Palette';\nimport Collage from './collage/Collage';\n\nwindow.PIECE_ID = 0;\n\nclass App extends Component {\n\n  state = {\n    src: null,\n    pieces: [], // Created by selection\n    processedPieces: {}, // Created by palette\n    placedPieces: [], // Created by collage\n    placedPiecesData: {}, //\n    selectionScale: 0.25,\n    pieceScale: 0.025,\n    savedPiecesData: null\n  };\n\n  componentDidMount() {\n    this.load();\n\n    document.body.addEventListener('keydown', e => {\n      if (e.key === 's') {\n        const image = document.querySelector('#selection .lower-canvas').toDataURL(\"image/png\").replace(\"image/png\", \"image/octet-stream\");  // here is the most important part because if you dont replace you will get a DOM 18 exception.\n\n        window.location.href = image; // it will save locally\n\n        setTimeout(() => {\n          const render = document.querySelector('#render .lower-canvas').toDataURL(\"image/png\").replace(\"image/png\", \"image/octet-stream\");\n          window.location.href = render; // it will save locally\n          window.prompt(\"Copy to clipboard: Ctrl+C, Enter\", localStorage.getItem('collageMakerState'));\n        }, 1);\n      }\n      if(e.key === 'Backspace') {\n        this.removeCurrentPiece();\n      }\n    });\n  }\n\n  componentDidUpdate() {\n    // save to localStorage\n    this.save();\n  }\n\n  removeCurrentPiece = () => {\n    const { pieces } = this.state;\n    const updated = pieces.filter(piece => !piece.selected);\n    this.setState({ pieces: updated });\n  }\n\n  onUpdatePieces = pieces => {\n    const { processedPieces } = this.state;\n    pieces.forEach(piece => {\n      if (piece.dirty) {\n        processedPieces[piece.id] = {\n          pre: piece\n        };\n      }\n    });\n    this.setState({ pieces, processedPieces });\n  }\n\n  togglePiece = id => {\n    const { placedPieces } = this.state;\n\n    const update = placedPieces.slice();\n    const i = update.indexOf(id);\n    if (i > -1) {\n      // remove\n      update.splice(i, 1);\n    } else {\n      // add\n      update.push(id);\n    }\n\n    this.setState({\n      placedPieces: update\n    });\n  }\n\n  selectPiece = id => {\n    const { pieces } = this.state;\n\n    const updated = [];\n    let selected = null;\n    pieces.forEach(piece => {\n      if (piece.id === id) {\n        piece.selected = true;\n        selected = piece;\n      } else {\n        piece.selected = false;\n        updated.push(piece);\n      }\n    });\n    updated.push(selected);\n    this.setState({ pieces: updated });\n  }\n\n  onPieceReady = (id, dataURL) => {\n    const { processedPieces, pieces } = this.state;\n    const updated = Object.assign({}, processedPieces);\n    updated[id].dataURL = dataURL;\n\n    pieces.forEach(piece => {\n      if (piece.id === id) {\n        piece.dirty = false;\n      }\n    });\n\n    this.setState({\n      processedPieces: updated,\n      pieces\n    });\n  }\n\n  save = () => {\n    const { pieces, placedPieces, pieceScale, placedPiecesData, selectionScale } = this.state;\n    const toSave = {\n      pieces, placedPieces, pieceScale, placedPiecesData, selectionScale\n    };\n    localStorage.setItem('collageMakerState', JSON.stringify(toSave));\n  }\n\n  load = () => {\n    const toLoad = localStorage.getItem('collageMakerState');\n    if (toLoad) {\n      const { pieces, placedPieces, pieceScale, placedPiecesData, selectionScale } = JSON.parse(toLoad);\n\n      pieces.forEach(piece => {\n        piece.dirty = true\n      });\n\n      this.onUpdatePieces(pieces);\n      this.setState({ placedPieces, pieceScale, selectionScale, placedPiecesData, savedPiecesData: placedPiecesData || {} });\n    }\n  }\n\n  clear = () => {\n    this.setState({\n      pieces: [],\n      processedPieces: {},\n      placedPieces: [],\n      placedPiecesData: {},\n      savedPiecesData: {}\n    });\n  }\n\n  render() {\n    const { src, pieces, processedPieces, placedPieces, pieceScale, selectionScale, savedPiecesData, placedPiecesData } = this.state;\n\n    return (\n      <div className=\"App\" style={{ background: '#e0e0e0', minHeight: '1000px' }}>\n        <AppBar position=\"static\" color=\"inherit\">\n          <Toolbar variant=\"dense\">\n            <Typography variant=\"h6\" color=\"inherit\">\n              Wood Grain Collage Maker\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <Grid container spacing={24} style={{ padding: '20px 100px' }}>\n          <Grid item xs={3}>\n            <Grid container>\n              <Card style={{ width: '100%' }}>\n                <CardContent>\n                  <Selection\n                    pieces={pieces}\n                    src={src}\n                    onUpdatePieces={this.onUpdatePieces}\n                    onUpdateSrc={src => this.setState({ src })}\n                    selectionScale={selectionScale}\n                    onScaleChange={selectionScale => this.setState({ selectionScale })}\n                    addPiece={id => this.togglePiece(id)}\n                    placedPiecesData={placedPiecesData}\n                  />\n                </CardContent>\n              </Card>\n            </Grid>\n          </Grid>\n          <Grid item xs={2}>\n            <Grid container>\n              <Card style={{ width: '100%', minHeight: '200px' }}>\n                <CardContent>\n                  { src && <Palette\n                    pieces={pieces}\n                    processedPieces={processedPieces}\n                    placedPieces={placedPieces}\n                    src={src}\n                    onPieceReady={this.onPieceReady}\n                    togglePiece={this.togglePiece}\n                    selectionScale={selectionScale}\n                  /> }\n                </CardContent>\n              </Card>\n              <div style={{ margin: '22px' }}>\n                <Button variant=\"contained\" onClick={this.clear}>\n                  Clear\n                </Button>\n              </div>\n            </Grid>\n          </Grid>\n          <Grid item xs={4}>\n            <Grid container>\n              <Card style={{ width: '100%' }}>\n                <CardContent>\n                  { <Collage\n                    pieces={pieces}\n                    processedPieces={processedPieces}\n                    src={src}\n                    placedPieces={placedPieces}\n                    savedPiecesData={savedPiecesData}\n                    onPiecePlacedUpdate={placedPiecesData => this.setState({ placedPiecesData })}\n                    onSelectPiece={this.selectPiece}\n                    scale={pieceScale}\n                    updatePieceScale={pieceScale => this.setState({ pieceScale })}\n                  /> }\n                </CardContent>\n              </Card>\n            </Grid>\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}